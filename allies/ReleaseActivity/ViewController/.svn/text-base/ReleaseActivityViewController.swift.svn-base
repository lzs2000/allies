//
//  ReleaseActivityViewController.swift
//  allies
//
//  Created by 徐霖 on 2017/4/17.
//  Copyright © 2017年 温星. All rights reserved.
//

import UIKit
import RxSwift
import RxCocoa
import RxDataSources
import MobileCoreServices

class ReleaseActivityViewController: UIViewController,UITableViewDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate {
    
    var imagePicker : UIImagePickerController!
    var actionSheetController: UIAlertController!
    
    var activityImageArray: [String] = ["ico_activityLightspot","ico_activityBrand","ico_activityLegalRight"]
    
    var RATableView = UITableView(frame: CGRect(x:0, y:64, width:screenW, height:screenH - 64), style: .plain)
//    let reuseIdentifier = "\(ActivityCommonTemplateCell.self)"

    
    
    let dataSource = RxTableViewSectionedReloadDataSource<SectionModel<String, CommonTemplateModel>>()
    let disposeBag = DisposeBag()
    let viewModel = ActivityCommonTemplateViewModel()
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.

        actionSheetController = UIAlertController(title: "请选择", message:nil, preferredStyle: .actionSheet)
        self.initActionSheet()
        
        RATableView.tableFooterView = UIView()
        RATableView.tableFooterView = UIView()
        RATableView.backgroundColor = backGroundColor
        RATableView.separatorStyle = UITableViewCellSeparatorStyle(rawValue: 1)!
        self.automaticallyAdjustsScrollViewInsets = false
        
        view.addSubview(RATableView)
        
//        RATableView.register(ActivityThemeCell.self, forCellReuseIdentifier: ActivityThemeCell.Identifier)
        
        RATableView.register(UINib.init(nibName: "ActivityCommonTemplateCell", bundle: nil), forCellReuseIdentifier: ActivityCommonTemplateCell.Identifier)
        
        RATableView.register(UINib.init(nibName: "ActivityCommonInputCell", bundle: nil), forCellReuseIdentifier: ActivityCommonInputCell.Identifier)
        
        RATableView.register(UINib.init(nibName: "ActivityImageCell", bundle: nil), forCellReuseIdentifier: ActivityImageCell.Identifier)
        
        tableViewConfig() 
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    //MARK:- ActionSheet
    func initActionSheet() {
        //取消按钮
        let cancelAction: UIAlertAction = UIAlertAction(title: "取消", style: .cancel) { action -> Void in
            //Just dismiss the action sheet
        }
        
        actionSheetController.addAction(cancelAction)
        
        //拍照
        let takePictureAction: UIAlertAction = UIAlertAction(title: "拍照", style: .default)
        { action -> Void in
            self.initWithImagePickView(type: "拍照")
        }
        
        actionSheetController.addAction(takePictureAction)
        
        //相册选择
        let choosePictureAction: UIAlertAction = UIAlertAction(title: "相册", style: .default)
        { action -> Void in
            self.initWithImagePickView(type: "相册")
        }
        
        actionSheetController.addAction(choosePictureAction)
    }
    
    func initWithImagePickView(type:NSString){
        
        self.imagePicker = UIImagePickerController()
        self.imagePicker.delegate = self;
        self.imagePicker.allowsEditing = true;
        
        switch type{
        case "拍照":
            self.imagePicker.sourceType = .camera
            break
        case "相册":
            self.imagePicker.sourceType = .photoLibrary
            break
        default:
            print("error")
        }
        
        self.present(self.imagePicker, animated: true, completion: nil)
    }
    
    // MARK:- UIImagePickerControllerDelegate
    func imagePickerController(picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : AnyObject]) {
        
        let mediaType = info[UIImagePickerControllerMediaType] as! String
        
        let compareResult = CFStringCompare(mediaType as NSString!, kUTTypeMovie, CFStringCompareFlags.compareCaseInsensitive)
        
        //判读是否是视频还是图片
        if compareResult == CFComparisonResult.compareEqualTo {
            
            let moviePath = info[UIImagePickerControllerMediaURL] as? NSURL
            
            //获取路径
            let moviePathString = moviePath!.relativePath
            
            if UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(moviePathString!) {
                
                UISaveVideoAtPathToSavedPhotosAlbum(moviePathString!, nil, nil, nil)
            }
            print("视频")
        } else {
            print("图片")
            let image = info[UIImagePickerControllerOriginalImage] as? UIImage
//            self.imageView.image =  image;
        }
        imagePicker.dismiss(animated: true, completion: nil)
    }
    
    //MARK:- tableViewDelegate
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 10
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        
        var cellHeight:CGFloat = 0;
        
        if indexPath.section == 0 {
            if indexPath.row == 0 {
                cellHeight = 200
            } else {
                cellHeight = 44
            }
        } else if indexPath.section == 3 {
            cellHeight = 160;
        } else {
            cellHeight = 44;
        }
        
        return cellHeight
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        if (indexPath.section == 0 && indexPath.row == 0) {
            self.present(actionSheetController, animated: true, completion: nil)
        }
        
        if (indexPath.section == 1 && indexPath.row == 0) {
//            let storyBoard = UIStoryboard(name: "mine", bundle: nil).instantiateInitialViewController(withIdentifier: "MyUnionCircleVC")
//            self.navigationController?.pushViewController(nextPage, animated: true)
        }
        
        if (indexPath.section == 2 && indexPath.row == 3) {
            let viewCtrl = ActivityCouponInstructionsVC()
            self.present(viewCtrl, animated: true, completion: nil)
        }
    }
    
    func tableViewConfig() {
        dataSource.configureCell = {
            _, tableview, indexPath, commonData in
            
            if indexPath.section == 0 {
                
                if indexPath.row == 0 {
                    let themeCell = UITableViewCell(style: UITableViewCellStyle(rawValue: 0)!, reuseIdentifier: "themeCell")
                    let themeImageView: UIImageView = UIImageView(frame: CGRect(x: 0, y: 0, width: screenW, height: 200))
                    themeImageView.image = UIImage(named: "ico_activityTheme")
                    themeCell.contentView.addSubview(themeImageView)
                    return themeCell
                    
                } else {
                    
                    let InputCell = tableview.dequeueReusableCell(withIdentifier: ActivityCommonInputCell.Identifier, for: indexPath) as! ActivityCommonInputCell
                    InputCell.configueCellWithData(inputData: commonData)
                    return InputCell
                }
                
            } else if indexPath.section == 1 {
                let InputCell = tableview.dequeueReusableCell(withIdentifier: ActivityCommonInputCell.Identifier, for: indexPath) as! ActivityCommonInputCell
                InputCell.configueCellWithData(inputData: commonData)
                return InputCell
                
            } else if indexPath.section == 2 {
                let commonCell = tableview.dequeueReusableCell(withIdentifier: ActivityCommonTemplateCell.Identifier, for: indexPath) as! ActivityCommonTemplateCell
                commonCell.configureWithData(commonData: commonData)
                return commonCell
            } else {
                
                let imageCell = tableview.dequeueReusableCell(withIdentifier: ActivityImageCell.Identifier, for: indexPath) as! ActivityImageCell
                imageCell.configureWithData(imageData: commonData)
                return imageCell
                
//                var imageCell = tableview.dequeueReusableCell(withIdentifier: "imageCell")
//                if imageCell == nil {
//                    imageCell = UITableViewCell(style: UITableViewCellStyle(rawValue: 0)!, reuseIdentifier: "imageCell")
//                }
//                
//                for item in self.activityImageArray {
//                    let imageView:UIImageView = UIImageView(frame: CGRect(x: 10, y: 10, width: screenW - 20, height: 140))
//                    imageView.image = UIImage(named: item);
//                    imageCell?.contentView.addSubview(imageView)
//                    
//                    let deleteImageBtn: UIButton = UIButton(type: UIButtonType.custom)
//                    deleteImageBtn.frame = CGRect(x: screenW - 30, y: 10, width: 30, height: 30)
//                    imageCell?.contentView.addSubview(deleteImageBtn)
//                    
//                }
            }
        }
        
        
        viewModel.getCommonTemplateModelData()
            .bindTo(RATableView.rx.items(dataSource:dataSource))
            .addDisposableTo(disposeBag)
        
        RATableView.rx
            .setDelegate(self)
            .addDisposableTo(disposeBag)
    }
    
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.view.endEditing(true)
    }
}
